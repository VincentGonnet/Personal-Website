---
import GlobalLayout from "../../layouts/GlobalLayout.astro";
---

<GlobalLayout title="Vincent Gonnet - Timeline">
	<div class="w-full flex flex-col items-center">
		<div class="w-fit">
			<h1 class="items-start ml-8 mb-2">Chronologie</h1>
			<div class="outer">
				<div class="card">
					<div class="info">
						<h3 class="title text-lg">
							Les prémices d'une grand aventure
						</h3>
						<p>
							Tout commença au collège, quand mon professeur de
							Mathématiques a créé un club de programmation.<br />
							 On été censé apprendre Scratch, mais comme j'avais
							déjà de l'expérience avec, il m'a appris les bases
							de Python.<br />
							 J'ai ainsi codé des petits jeux textuels dans le
							terminal, puis j'ai appris par moi-même à faire des
							interfaces graphiques avec Tkinter.<br />
						</p>
					</div>
					<div class="info mt-4">
						<h3 class="title text-lg">Messing with Arduino</h3>
						<p>
							En troisième, j'ai fait un stage d'observation dans
							l'Industry Lab d'un incubateur de start-ups. <br />
							 Ils avaient des composants électroniques, et ils
							m'ont donné une carte Arduino pour que je puisse
							coder dessus.<br />
							 C'était la première fois que je codais en C++, et
							j'ai pu coder des petits programmes interagissant
							avec des boutons, des LEDs et un écran LCD.<br />
							 Les possibilitiés m'ont semblées immenses, et j'ai
							reconsidéré la place de l'électronique et de
							l'informatique dans ma vision du monde.
						</p>
					</div>
				</div>
				<div class="card">
					<div class="info">
						<h3 class="title text-lg">
							Développement de plugin, mon premier programme
							concret
						</h3>
						<p>
							Au début du lycée, avec un groupe d'amis, nous avons
							créé un serveur Minecraft.<br />
							 Ils construisaient et designaient des mini-jeux,
							tandis que je codais le plugin qui permettait de
							tout faire fonctionner.<br />
							 C'était ma première introduction à Java, et à la
							programmation orientée objet en général.<br />
							 J'ai aussi appris à utiliser une base de donnée
							(MySQL), ainsi que quelques fondamentaux en réseau
							(TCP/UDP, qu'est-ce qu'une adresse IP, protocole SSH
							& SFTP, etc).
						</p>
					</div>
					<div class="info mt-4">
						<h3 class="title text-lg">Bots Discord avec NodeJS</h3>
						<p>
							Avec un bon ami à moi, nous avons créé un serveur
							Discord pour des sessions de jeu de rôle en ligne.<br
							/>
							 J'ai alors crée un bot Discord qui permettait, aux
							joueurs et aux maîtres du jeu, de gérer des
							personnages virtuels, de lancer des dés, de créer
							des objets, de se battre, d'utiliser des
							inventaires, de créer des potions, etc.<br />
							 C'était un projet passionant, qui ressemblait à un
							jeu textuel multijoueur dans Discord.<br />
							 C'était ma première fois avec JavaScript, et ça m'a
							permis d'apprendre la programmation asynchrone,
							ainsi que l'utilisation d'une base de donnée avec
							NodeJS.<br />
							 Depuis, j'ai codé d'autres bots Discord, comme un
							Pokedex qui permet de rechercher un Pokémon et
							d'obtenir ses informations, récupérées via une API.
						</p>
					</div>
					<div class="info mt-4">
						<h3 class="title text-lg">
							Ma première expérience avec le Raspberry PI
						</h3>
						<p>
							J'ai récupéré un Raspberry PI 4 pour héberger mes
							bots Discord et expérimenter avec d'autres services.


							<br />
							 Ça m'a permis de découvrir Linux, la redirection de
							ports, l'hébergement d'une base de donnée (CouchDB),
							et j'ai mis en place un cloud personnel basé sur
							OwnCloud.<br />
						</p>
					</div>
					<div class="info mt-4">
						<h3 class="title text-lg">
							Applications mobiles avec Java, puis ReactNative
						</h3>
						<p>
							Pendant ma dernière année de lycée, j'ai voulu
							apprendre à faire des applications mobile,
							comprendre comment cela fonctionne. <br />
							 J'ai commencé avec Java dans Android Studio, et
							j'ai codé un Cookie Clicker.<br />
							 Puis j'ai essayé React Native, et j'ai découvert le
							système de composants, de propriétés, de states,
							etc. Je ne connaissais pas encore React à l'époque.<br
							/>
							 J'ai fait une application qui permettait de gérer,
							d'ajouter et de supprimer des compteurs.<br />
						</p>
					</div>
				</div>
				<div class="card">
					<div class="info">
						<h3 class="title text-lg">
							React avec une assiciation de mon école d'ingénieur
						</h3>
						<p>
							Les choses ont commencé à devenir intéressantes
							lorsque j'ai intégré l'Université de Technologie de
							Troyes. J'ai rencontré des tas de personnes
							motivées, avec des intérêts communs aux miens.<br />
							 J'ai rejoint l'UTT Net Group, une association qui
							créé et héberge des services pour les étudiants et
							les autres associations. J'ai aidé à maintenir un
							site web pour l'<a
								class="underline underline-offset-1"
								target="_blank"
								href="https://arena.utt.fr/">UTT Arena</a
							>, découvrant React et les bases du développement
							web avec un framework.<br />
							 J'ai aussi utilisé Git pour la première fois dans
							un projet en équipe.
						</p>
					</div>
					<div class="info mt-4">
						<h3 class="title text-lg">
							Mes premiers cours d'informatique
						</h3>
						<p>
							Pour la première fois de ma vie, j'ai eu des cours
							de programmations.<br />
							 J'ai pu découvrir le C, l'HTML et le CSS. Je
							n'avais jamais touché à ces langages auparavant, et
							j'étais ravi d'apprendre des choses qui me
							passionnent à l'école.<br />
							 J'ai pu travailler sur quelques projets : un site
							vitrine pour un camarade, un jeu de taquin en C, et
							une <a
								class="underline underline-offset-1"
								target="_blank"
								href="https://github.com/VincentGonnet/Marcel-Manager"
								>application de bureau en Python et C</a
							> avec une interface graphique.<br />
						</p>
					</div>
					<div class="info mt-4">
						<h3 class="title text-lg">
							Club de développement de jeux vidéo : Unity & C#
						</h3>
						<p>
							Pendant cette année à l'UTT, j'ai créé un club de
							développement de jeux vidéos, pour apprendre à faire
							des jeux avec Unity.<br />
							 J'ai donc appris à utiliser ce moteur, et le C# par
							la même occasion. Nous avons acheté un cours en
							ligne, puis créé un jeu d'arcade/plateforme en 2D.<br
							/>
							 C'était instructif de travailler en équipe,
							d'assigner des rôles, et de gérer un projet. Pendant
							que certains dessinaient les assets ou composaient
							la musique, je faisais partie de l'équipe de
							développement et je réfléchissais aux mécaniques du
							jeu.<br />
						</p>
					</div>
				</div>
				<div class="card">
					<div class="info">
						<h3 class="title text-lg">L'esprit "self-hosted"</h3>
						<p>
							De retour à ma ville de naissance, je voulais
							occuper ma nouvelle vie universitaire avec des
							projets.<br />
							 J'avais toujours ce Raspberry PI, mais je sentais
							qu'une amélioration ne ferait pas de mal. J'ai alors
							utilisé le salaire de mon job d'été pour construire
							une machine dédiée, un serveur. <br />
							 À partir de ce moment, j'ai commencé à apprendre,
							tant bien que mal, le plus de choses possibles à
							propos de Linux, de réseau, et de la gestion d'un
							serveur.<br />
							 J'ai appris à utiliser Docker avec docker-compose.
							J'ai déployé un reverse-proxy, un serveur DNS local,
							et des certificats SSL automatiques avec Traefik.
							J'ai réservé un nom de domaine, et j'étais
							finalement prêt à déployer des services.<br />
							 J'ai commencé par Nextcloud, pour remplacer mon
							vieil OwnCloud. Puis j'ai mis en place Portainer et
							Watchtower pour gérer mes conteneurs Docker. Je
							n'avais pas Netflix, alors pourquoi ne pas héberger
							Jellyfin ? Uptime Kuma me permettrait de garder un
							oeil sur mes services, et j'aurais un résumé de tout
							ça, avec des liens personnalisés, sur une page
							d'accueil qui s'ouvrirait avec mon navigateur.<br />
							 Une fois le tout installé, j'ai pu commencer à
							héberger chaque projet sur mon propre serveur. C'est
							ça, la liberté.<br />
						</p>
					</div>
					<div class="info mt-4">
						<h3 class="title text-lg">
							Développement mobile partie II avec Flutter
						</h3>
						<p>
							Pendant mon temps libre à l'Université, j'ai
							commencé à apprendre Flutter. Je voulais être
							capable de créer des applications mobiles, et
							j'étais curieux à propos de ce nouveau framework.<br
							/>
							 J'ai donc suivi un cours de 37h par FreeCodeCamp,
							et modifié l'application pour créer <a
								class="underline underline-offset-1"
								target="_blank"
								href="https://github.com/VincentGonnet/Colorfool"
								>Colorfool</a
							>, un "color-picker" avec sauvegarde.<br />
							 J'ai ainsi appris à utiliser Firebase pour
							authentifer les utilisateurs, et Firestore pour
							stocker les données.<br />
							 J'ai ensuite commencé à réfléchir à une
							application, "Project Universe", qui permettrait de
							gérer des sessions de jeu de rôle. J'ai arrêté de
							travailler dessus, mais l'idée reste dans un coin de
							ma tête, et je la concrétiserai un jour.<br />
						</p>
					</div>
				</div>
				<div class="card">
					<div class="info">
						<h3 class="title text-lg">
							Azelys : mon propre serveur Minecraft
						</h3>
						<p>
							Nostalgiques de notre ancien serveur Minecraft, un
							ami et moi avons décidé d'en créer un nouveau.<br />
							 Cette fois-ci, ce serait un serveur survival, basé
							sur l'entraide entre joueurs.<br />
							 Avec mes nouvelles connaissances en réseau, et mon
							expérience en développement de plugin, j'ai pu créer
							un serveur stable et sécurisé.<br />
							 Il était auto-hébergé bien sûr, et grâce au service
							Pterodactyl j'avais un panel d'administration pour
							nous permettre de gérer le serveur.<br />
							 Nous avons créé un Discord, et j'ai codé un plugin
							avec de nouvelles fonctionnalités, telles qu'un
							système de titres à débloquer, un système de
							<a
								class="underline underline-offset-1"
								target="_blank"
								href="https://fr.wikipedia.org/wiki/Warp_zone"
								>warps</a
							>
							 , et des améliorations de qualité de vie.<br />
							 C'était très enrichissant, et nous avons eu un peu
							de succès, avec maintenant plus de 70 joueurs
							enregistrés.<br />
							 J'ai renforcé mes connaissances en Java et en base
							de donnée, tout en développant des compétences
							sociales (modération, communication, etc).<br />
						</p>
					</div>
					<div class="info mt-4">
						<h3 class="title text-lg">
							C'est l'heure de la Game JAM !
						</h3>
						<p>
							Pendant l'été 2O23, j'ai participé à ma première
							Game JAM (GMTK).<br />
							 Avec un groupe d'amis, nous avons créé un jeu en
							48h.<br />
							 Nous étions tous réunis dans la même pièce, et nous
							n'avons pas beaucoup dormi, mais c'était très
							amusant.<br />
							 Des défis sont apparus, comme garder un scope
							raisonnable, et gérer les merge-conflicts
							impossibles que Git et Unity produisaient, mais nous
							avons (de justesse) réussi à finir le jeu à temps.
							Il était parfois buggé, pas du tout équilibré, mais
							nous l'avons livré !<br />
							 3 mois plus tard, nous avons participé à une autre
							Game JAM (ludum dare) qui s'est beaucoup mieux
							passée, avec un jeu satisfaisant à la fin.<br />
						</p>
					</div>
				</div>
				<div class="card">
					<div class="info">
						<h3 class="title text-lg">Sites et applications Web</h3>
						<p>
							Pendant les premiers mois de ma deuxième année
							d'université, mon attention s'est déplacée vers la
							création de sites web.<br />
							 Ce site est le premier d'entre eux. D'autres
							suivront, vous pourrez les trouver sur ma page
							GitHub.<br />
							 Mon but est d'apprendre à utiliser des frameworks
							et des tech stacks. Ce site est construit avec
							Astro, TailwindCSS, et Bun pour remplacer NodeJS.
						</p>
					</div>
				</div>
				<div class="card">
					<div class="info">
						<h3 class="title text-lg">Et l'histoire continue...</h3>
						<p>
							Qui sait ce que le future nous réserve ? <br />
							 Je suis actuellement étudiant en informatique en
							France, et j'ai hâte d'en apprendre plus sur le
							monde de la programmation.<br />
							 Vous pouvez voir mes projets en cours sur mon
							<a
								class="underline underline-offset-2"
								href="https://github.com/VincentGonnet/"
								target="_blank">GitHub</a
							>
							 ou voir les projets terminés sur la
							<a
								class="underline underline-offset-2"
								href="/fr/projets">page Projets</a
							>.
						</p>
					</div>
				</div>
			</div>
		</div>
	</div>
</GlobalLayout>

<style>
	/* Card container */
	.card {
		position: relative;
		max-width: 600px;
	}

	/* setting padding based on even or odd */
	.card:nth-child(odd) {
		padding: 30px 0 30px 30px;
	}
	.card:nth-child(even) {
		padding: 30px 30px 30px 0;
	}
	/* Global ::before */
	.card::before {
		content: "";
		position: absolute;
		width: 50%;
		border: solid var(--color-primary);
	}

	/* Setting the border of top, bottom, left */
	.card:nth-child(odd)::before {
		left: 0px;
		top: -4.5px;
		bottom: -4.5px;
		border-width: 5px 0 5px 5px;
		border-radius: 50px 0 0 50px;
	}

	/* Setting the border of top, bottom, right */
	.card:nth-child(even)::before {
		right: 0;
		top: 0;
		bottom: 0;
		border-width: 5px 5px 5px 0;
		border-radius: 0 50px 50px 0;
	}

	/* Removing the border if it is the first card */
	.card:first-child::before {
		border-top: 0;
		border-top-left-radius: 0;
	}

	/* Removing the border if it is the last card  and it's odd */
	.card:last-child:nth-child(odd)::before {
		border-bottom: 0;
		border-bottom-left-radius: 0;
	}

	/* Removing the border if it is the last card  and it's even */
	.card:last-child:nth-child(even)::before {
		border-bottom: 0;
		border-bottom-right-radius: 0;
	}

	/* Information about the timeline */
	.info {
		display: flex;
		flex-direction: column;
		background: #2a3954;
		color: white;
		border-radius: 10px;
		padding: 10px;
	}

	/* Title of the card */
	.title {
		color: var(--color-primary);
		position: relative;
	}

	/* Timeline dot  */
	.title::before {
		content: "";
		position: absolute;
		width: 10px;
		height: 10px;
		background: white;
		border-radius: 999px;
		border: 3px solid var(--color-primary);
	}

	/* text right if the card is even  */
	.card:nth-child(even) > .info > .title {
		text-align: right;
	}

	/* setting dot to the left if the card is odd */
	.card:nth-child(odd) > .info > .title::before {
		left: -45px;
	}

	/* setting dot to the right if the card is odd */
	.card:nth-child(even) > .info > .title::before {
		right: -45px;
	}
</style>
